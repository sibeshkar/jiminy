#!/usr/bin/env python
import argparse
import logging
import sys
import time

from jiminy import client as jiminy_client

# In modules, use `logger = logging.getLogger(__name__)`
logger = logging.getLogger()
logger.addHandler(logging.StreamHandler(sys.stderr))

# gym.undo_logger_setup()

DEFAULT_ENV = 'gym-core.CartPole-v0'

def truncate(obj, l=50):
    if not isinstance(obj, str):
         obj = str(obj)

    if len(obj) > l:
        return obj[:l] + '...'
    else:
        return obj

def create_env(client, args=None):
    if args and args.env:
        env = args.env
    else:
        env = DEFAULT_ENV

    client.env_create(env_id=args.env)
    logger.info('Created evaluation: evaluation_id=%s', evaluation.id)
    return evaluation

def main():
    parser = argparse.ArgumentParser(description=None)
    parser.add_argument('-v', '--verbose', action='count', dest='verbosity', default=0, help='Set verbosity.')
    parser.add_argument('-s', '--server', default='http://172.16.163.128:5800', help='Base URL for the server.')

    subparsers = parser.add_subparsers()

    sub = subparsers.add_parser('create_env')
    sub.add_argument('-e', '--env', default=DEFAULT_ENV, help='Which env to run')
    sub.set_defaults(func=create_env)

    args = parser.parse_args()
    if args.verbosity == 0:
        logger.setLevel(logging.INFO)
    elif args.verbosity >= 1:
        logger.setLevel(logging.DEBUG)

    client = jiminy_client.Client(args.server)

    start = time.time()
    try:
        args.func(client=client, args=args)
    finally:
        logger.info('(Total runtime: %.1fs)', time.time() - start)

    return 0

if __name__ == '__main__':
    sys.exit(main())
